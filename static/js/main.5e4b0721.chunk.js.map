{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseFormContent.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","onChange","e","year","target","onYearChange","ExpenseDate","month","date","toLocaleString","getFullYear","day","getUTCDate","ExpenseItem","title","amount","ExpensesList","expensesArr","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","enteredYear","setEnteredYear","filteredExpenses","items","filter","toString","ExpenseFormContent","formState","updateFormState","onClick","onSubmit","type","titleChange","min","step","amountChange","dateChange","setEnteredTitle","setEnteredAmount","setEnteredDate","ExpenseForm","enteredTitle","enteredAmount","enteredDate","console","log","Date","toISOString","preventDefault","expenseData","onSaveExpenseData","NewExpense","enteredExpenseData","random","onAddNewExpense","INIT_EXPENSES","App","updateExpensesList","prevExpenses","addExpenseHandler","filterExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5e4b0721.chunk.js","sourcesContent":["import \"./Card.css\";\n\nfunction Card(props) {\n  const classes = \"card \" + props.className;\n  return (<div className={classes}>{props.children}</div>)\n}\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const yearChangeHandler = (e) => {\n    const year = e.target.value;\n    props.onYearChange(year);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.value} onChange={yearChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const year = props.date.getFullYear();\n  const day = props.date.getUTCDate().toLocaleString(\"en-US\", { day: \"2-digit\" });\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import React from \"react\";\n\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nfunction ExpenseItem(props) {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.expensesArr.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No Expenses Found</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.expensesArr.map((expense) => {\n        return (\n          <ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n    let barFillHeight = '0%';\n\n    if (props.maxValue > 0) {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\n    }\n\n    return <div className=\"chart-bar\">\n        <div className=\"chart-bar__inner\">\n            <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\n        </div>\n            <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n};\n\nexport default ChartBar;","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => {\n    return dataPoint.value;\n  });\n  const totalMax = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => {\n          return (\n              <ChartBar\n                  key={dataPoint.label}\n                  value={dataPoint.value}\n                  maxValue={totalMax}\n                  label={dataPoint.label} />\n          );\n      })}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        { label: 'Jan', value: 0 },\n        { label: 'Feb', value: 0 },\n        { label: 'Mar', value: 0 },\n        { label: 'Apr', value: 0 },\n        { label: 'May', value: 0 },\n        { label: 'Jun', value: 0 },\n        { label: 'Jul', value: 0 },\n        { label: 'Aug', value: 0 },\n        { label: 'Sep', value: 0 },\n        { label: 'Oct', value: 0 },\n        { label: 'Nov', value: 0 },\n        { label: 'Dec', value: 0 },\n    ];\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount\n    };\n    return <Chart dataPoints={chartDataPoints} />\n};\n\nexport default ExpensesChart;","import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\n\nfunction Expenses(props) {\n  const [enteredYear, setEnteredYear] = useState(\"2020\");\n\n  const filteredExpenses = props.items.filter(\n    (expense) => expense.date.getFullYear().toString() === enteredYear\n  );\n\n  const yearChangeHandler = (value) => {\n    setEnteredYear(value);\n  };\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter value={enteredYear} onYearChange={yearChangeHandler} />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList expensesArr={filteredExpenses} />\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nconst ExpenseFormContent = (props) => {\n  const [formState, updateFormState] = useState(\"closed\");\n\n  const formOpenHandler = () => {\n    updateFormState(\"open\");\n  };\n\n  const formCloseHandler = () => {\n    props.setEnteredTitle(\"\");\n    props.setEnteredAmount(\"\");\n    props.setEnteredDate(\"\");\n    updateFormState(\"closed\");\n  };\n\n  if (formState === \"closed\") {\n    return (\n      <div>\n        <button onClick={formOpenHandler}>Add New Expense</button>\n      </div>\n    );\n  }\n\n  return (\n    <form onSubmit={props.onSubmit}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" value={props.title} onChange={props.titleChange} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={props.amount}\n            onChange={props.amountChange}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={props.date}\n            onChange={props.dateChange}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={formCloseHandler}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseFormContent;\n","import React, { useState } from \"react\";\nimport ExpenseFormContent from \"./ExpenseFormContent\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const titleChangeHandler = (e) => {\n    setEnteredTitle(e.target.value);\n  };\n\n  const amountChangeHandler = (e) => {\n    setEnteredAmount(e.target.value);\n  };\n\n  const dateChangeHandler = (e) => {\n    console.log(new Date(e.target.value).toISOString());\n    setEnteredDate(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const date = new Date(enteredDate);\n    console.log(date.toISOString());\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <ExpenseFormContent\n      title={enteredTitle}\n      date={enteredDate}\n      amount={enteredAmount}\n      titleChange={titleChangeHandler}\n      amountChange={amountChangeHandler}\n      dateChange={dateChangeHandler}\n      onSubmit={submitHandler}\n      setEnteredTitle={setEnteredTitle}\n      setEnteredAmount={setEnteredAmount}\n      setEnteredDate={setEnteredDate}\n    />\n  );\n};\n\nexport default ExpenseForm;\n","import React from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      id: Math.random().toString(),\n      ...enteredExpenseData,\n    };\n    console.log(expenseData);\n    props.onAddNewExpense(expenseData);\n  };\n  return (\n    <div className=\"new-expense\">\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst INIT_EXPENSES = [\n   {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  }, \n];\n\nfunction App() {\n  const [expenses, updateExpensesList] = useState(INIT_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    updateExpensesList((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  const addNewExpenseHandler = (expense) => {\n    console.log(\"In App.js\");\n    addExpenseHandler(expense);\n  };\n  return (\n    <div>\n      <NewExpense onAddNewExpense={addNewExpenseHandler} />\n      <Expenses filterExpenses={updateExpensesList} items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}